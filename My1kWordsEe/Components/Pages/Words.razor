@page "/"
@rendermode InteractiveServer

@using CSharpFunctionalExtensions
@using My1kWordsEe.Models;
@using My1kWordsEe.Components.Layout;
@using My1kWordsEe.Services.Cqs

@inject NavigationManager NavigationManager
@inject GetOrAddSampleWordCommand GetOrAddSampleWordCommand;

@code {
    private static readonly Dictionary<EeWord, int> WordIndex = Ee1kWords.AllWords
        .Select((w, i) => (w, i))
        .ToDictionary(p => p.w, p => p.i + 1);

    private Ee1kWords Ee1KWords = new Ee1kWords();

    private void SelectWord(MouseEventArgs e, string word)
    {
        this.NavigationManager.NavigateTo($"/word/{word}");
    }

    private void OnSearchInput(ChangeEventArgs e)
    {
        checkWordResult = default;
        var searchTerm = e.Value?.ToString()?.Trim() ?? string.Empty;
        this.Ee1KWords = Ee1KWords.WithSearch(searchTerm);
    }

    private string? SearchTerm;
    private bool isCheckInProgress = false;
    private Maybe<Result<SampleWord>> checkWordResult;

    private async Task CheckWord(MouseEventArgs e)
    {
        if (string.IsNullOrWhiteSpace(SearchTerm))
        {
            return;
        }

        this.isCheckInProgress = true;

        this.checkWordResult = await GetOrAddSampleWordCommand.Invoke(SearchTerm);

        if (this.checkWordResult.Value.IsSuccess)
        {
            this.NavigationManager.NavigateTo($"/word/{SearchTerm}");
        }

        this.isCheckInProgress = false;
    }
}

<PageTitle>1k Words</PageTitle>

<div class="text-center">
    <div class="row sticky-top">
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" id="inputGroup-sizing-default">Search</span>
            </div>
            <InputText @bind-Value="SearchTerm" @oninput="OnSearchInput" class="form-control" aria-label="Search" aria-describedby="inputGroup-sizing-default" />
        </div>
    </div>
    <div class="row">
        <table class="table table-striped table-hover ">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Eestikeelne sõna</th>
                    <th scope="col">English word(s)</th>
                    <th scope="col">Part of speech</th>
                </tr>
            </thead>
            <tbody>
                @{
                    foreach (var word in Ee1KWords.SelectedWords)
                    {
                        <tr role="button" @onclick="@(e => SelectWord(e, word.Value))">
                            <th scope="row">@WordIndex[word]</th>
                            <td>@word.Value</td>
                            <td>@string.Join(" / ",word.EnWords)
                            </td>
                            <td>@word.EePartOfSpeech.ToEnPartOfSpeech() / @word.EePartOfSpeech</td>
                        </tr>
                    }
                }

                <tr>
                    <th scope="row">#</th>
                    <td>
                        <div class="d-grid gap-2">
                            @if (checkWordResult.HasValue && checkWordResult.Value.IsFailure)
                            {
                                @checkWordResult.Value.Error
                            }
                            else
                            {
                                <button @onclick="CheckWord" type="button" class="btn btn-primary btn-block btn-sm">
                                    @if (isCheckInProgress)
                                    {
                                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true" />
                                    }
                                    else
                                    {
                                        <span>Check the word</span>
                                    }
                                </button>
                            }
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>