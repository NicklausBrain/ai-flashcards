@page "/"
@rendermode InteractiveServer

@using My1kWordsEe.Services;
@using My1kWordsEe.Models;
@using My1kWordsEe.Components.Layout;

@inject NavigationManager NavigationManager
@inject OpenAiService OpenAiService

@code {
    public Ee1kWords Ee1KWords { get; private set; } = new Ee1kWords();

    public static readonly Dictionary<EeWord, int> WordIndex = Ee1kWords.AllWords.Select((w, i) => (w,i)).ToDictionary(p => p.w, p=>p.i+1);

    private void SelectWord(MouseEventArgs e, string word)
    {
        NavigationManager.NavigateTo($"/word/{word}", new NavigationOptions
            {
                ForceLoad = true
            });
    }

    private void OnSearchInput(ChangeEventArgs e)
    {
        var searchTerm = e.Value?.ToString() ?? string.Empty;
        Ee1KWords = Ee1KWords.WithSearch(searchTerm);
    }
}

<PageTitle>1k Words</PageTitle>

<div class="text-center">
    <div class="row sticky-top">
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" id="inputGroup-sizing-default">Search</span>
            </div>
            <input type="text" class="form-control " aria-label="Search" aria-describedby="inputGroup-sizing-default"
                @oninput="OnSearchInput" />
        </div>
    </div>
    <div class="row">
        <table class="table table-striped table-hover ">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Eestikeelne sõna</th>
                    <th scope="col">English word(s)</th>
                    <th scope="col">Part of speech</th>
                </tr>
            </thead>
            <tbody>
                @{
                    foreach (var word in Ee1KWords.SelectedWords)
                    {
                        <tr role="button" @onclick="@(e => SelectWord(e, word.Value))">
                            <th scope="row">@WordIndex[word]</th>
                            <td>@word.Value</td>
                            <td>@string.Join(" / ",word.EnWords)
                            </td>
                            <td>@word.EePartOfSpeech.ToEnPartOfSpeech() / @word.EePartOfSpeech</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>