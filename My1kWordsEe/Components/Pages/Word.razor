@page "/word/{eeWord}"
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@using CSharpFunctionalExtensions
@using My1kWordsEe.Services;
@using My1kWordsEe.Models;
@using My1kWordsEe.Components.Layout;
@using My1kWordsEe.Services.Cqs;
@using System.Text.RegularExpressions;
@using System.ComponentModel.DataAnnotations

@inject IJSRuntime JS
@inject GetOrAddSampleWordCommand EnsureWordCommand
@inject AddSampleSentenceCommand CreateSampleCommand

@code {
    [Parameter]
    public required string EeWord { get; init; }

    private Maybe<Result<SampleWord>> WordMetadata;

    protected override async Task OnParametersSetAsync()
    {
        WordMetadata = EeWord.ValidateWord()
        ? await this.EnsureWordCommand.Invoke(EeWord)
        : Result.Failure<SampleWord>("Invalid word");
        await base.OnParametersSetAsync();
    }

    private bool IsSampleGenerationInProgress = false;

    private async Task GenerateSample(MouseEventArgs e)
    {
        this.IsSampleGenerationInProgress = true;
        if (IsDataLoadedOk)
        {
            this.WordMetadata = await this.CreateSampleCommand.Invoke(Value);
        }
        this.IsSampleGenerationInProgress = false;
    }

    private async Task SpeakWord(MouseEventArgs e)
    {
        await JS.InvokeVoidAsync("speakWord", EeWord);
    }

    private bool IsDataLoadedOk => WordMetadata.HasValue && WordMetadata.Value.IsSuccess;

    private bool HasError => WordMetadata.HasValue && WordMetadata.Value.IsFailure;

    private SampleWord Value => WordMetadata.Value.Value;

    private string Error => WordMetadata.Value.Error;
}

<script>
    window.speakWord = async (audioId) => {
        const audio = document.getElementById(audioId);
        await audio.play();
    };
</script>

<div class="text-left">
    <div class="row">
        <h1>
            @EeWord

            @if (IsDataLoadedOk && Value.EeAudioUrl != null)
            {
                <i class="bi bi-volume-down-fill small" @onclick="SpeakWord">
                    <audio id="@EeWord" src="@Value.EeAudioUrl"></audio>
                </i>
            }
        </h1>

        @if (IsDataLoadedOk)
        {
            <h3>[@Value.EnWord]</h3>

            @if (Value.EnWords.Any())
            {
                <h4>[@string.Join(" / ", Value.EnWords)]</h4>
            }

            <h4>@Value.EnExplanation</h4>
        }
        else if (HasError)
        {
            <h3>@Error</h3>
        }
        else
        {
            <div class="d-flex justify-content-center">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        }
    </div>

    @if (IsDataLoadedOk)
    {
        <div class="row">
            @foreach (var sample in Value.Samples)
            {
                <div class="col-6 p-1">
                    <SampleV2 Sample="@sample">
                    </SampleV2>
                </div>
            }

            <div class="col-6 text-center p-1">
                @if (IsSampleGenerationInProgress)
                {
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                }
                else
                {
                    <button type="button" class="btn btn-primary" onclick="@GenerateSample">
                        <i class="bi bi-robot"></i>
                        Generate sample sentence
                    </button>
                }
            </div>
        </div>
    }
</div>
