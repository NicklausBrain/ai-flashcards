@page "/"
@rendermode InteractiveServer

@using BlazorBootstrap
@using CSharpFunctionalExtensions
@using My1kWordsEe.Models;
@using My1kWordsEe.Components.Layout;
@using My1kWordsEe.Services.Cqs

@inject NavigationManager NavigationManager
@inject GetOrAddSampleWordCommand GetOrAddSampleWordCommand;

@code {
    private static readonly Dictionary<SampleWord, int> WordIndex = Ee1kWords.AllWords
        .Select((w, i) => (w, i))
        .ToDictionary(p => p.w, p => p.i + 1);

    private Ee1kWords Ee1KWords = new Ee1kWords();
    private string? SearchTerm;
    private bool IsCheckInProgress = false;
    private Maybe<Result<SampleWord>> CheckWordResult;

    private void SelectWord(string word)
    {
        this.NavigationManager.NavigateTo($"/word/{word}");
    }

    private void OnSearchInput(ChangeEventArgs e)
    {
        this.CheckWordResult = default;
        var searchTerm = e.Value?.ToString()?.Trim() ?? string.Empty;
        this.Ee1KWords = Ee1KWords.WithSearch(searchTerm);
    }

    private async Task CheckWord(MouseEventArgs e)
    {
        if (string.IsNullOrWhiteSpace(this.SearchTerm))
        {
            return;
        }

        this.IsCheckInProgress = true;

        this.CheckWordResult = await GetOrAddSampleWordCommand.Invoke(this.SearchTerm?.Trim() ?? string.Empty);

        if (this.CheckWordResult.Value.IsSuccess)
        {
            this.NavigationManager.NavigateTo($"/word/{this.SearchTerm}");
        }

        this.IsCheckInProgress = false;
    }
}

<PageTitle>1k Words</PageTitle>

<div class="text-center">
    <div class="row sticky-top">
        <div class="input-group mb-3">
            <span class="input-group-text">Search</span>
            <InputText @bind-Value="SearchTerm" @oninput="OnSearchInput" class="form-control" aria-label="Search" aria-describedby="inputGroup-sizing-default" />
            
            @if (IsCheckInProgress)
            {
                <button class="btn btn-outline-primary" type="button">
                    <Spinner Size="SpinnerSize.Small" />
                </button>
            }
            else
            {
                <button  @onclick="CheckWord" class="btn btn-outline-primary" type="button">Check the word</button>
            }
        </div>
    </div>
    <div class="row">
        <Grid TItem="SampleWord"
              Class="table table-hover table-bordered table-striped"
              Data="Ee1KWords.SelectedWords"
              PageSize="10"
              AllowPaging="true"
              AllowSorting="true"
              Responsive="true"
              AllowRowClick="true"
              OnRowClick="@(args => SelectWord(args.Item.EeWord))">
            <GridColumns>
                <GridColumn TItem="SampleWord" HeaderText="#" PropertyName="Id" SortKeySelector="item => WordIndex[item]">
                    @WordIndex[context]
                </GridColumn>
                <GridColumn TItem="SampleWord" HeaderText="Eestikeelne sõna" PropertyName="EeWord" SortKeySelector="item => item.EeWord">
                    @context.EeWord
                </GridColumn>
                <GridColumn TItem="SampleWord" HeaderText="English word(s)" PropertyName="EnWord" SortKeySelector="item => item.EnWord">
                    @context.EnWord (@string.Join(" / ", context.EnWords))
                </GridColumn>
                <GridColumn TItem="SampleWord" HeaderText="Explanation" PropertyName="EnExplanation" SortKeySelector="item => item.EnExplanation">
                    @context.EnExplanation
                </GridColumn>
            </GridColumns>
            <GridTemplates>
                <GridEmptyDataTemplate TItem="SampleWord">
                    <div class="d-grid gap-2">
                        @if (CheckWordResult.HasValue && CheckWordResult.Value.IsFailure)
                        {
                            @CheckWordResult.Value.Error
                        }
                        else
                        {
                            <button @onclick="CheckWord" type="button" class="btn btn-primary btn-block btn-sm">
                                @if (IsCheckInProgress)
                                {
                                    <Spinner Size="SpinnerSize.Small" />
                                }
                                else
                                {
                                    <span>Check the word</span>
                                }
                            </button>
                        }
                    </div>
                </GridEmptyDataTemplate>
            </GridTemplates>
        </Grid>
    </div>
</div>