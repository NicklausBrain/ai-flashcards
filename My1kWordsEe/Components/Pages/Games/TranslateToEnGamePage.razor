@page "/translate-game/en"

@rendermode @(new InteractiveServerRenderMode(prerender: false))

@using BlazorBootstrap
@using CSharpFunctionalExtensions
@using My1kWordsEe.Models
@using My1kWordsEe.Models.Games
@using My1kWordsEe.Services.Cqs

@inject GetOrAddSampleWordCommand EnsureWordCommand;
@inject AddSampleSentenceCommand CreateSampleCommand;
@inject CheckEnTranslationCommand CheckEnTranslationCommand;
@inject IJSRuntime JS;

@code {
    TranslateToEnGame Game;
    Maybe<string> GameGenerationError;

    protected override async Task OnParametersSetAsync()
    {
        Game = TranslateToEnGame.Empty;
        var gameGen = await TranslateToEnGame.Generate(EnsureWordCommand, CreateSampleCommand);
        if (gameGen.IsSuccess)
        {
            Game = gameGen.Value;
        }
        else
        {
            GameGenerationError = gameGen.Error;
        }
        await base.OnParametersSetAsync();
    }

    // todo add succes/fail sound
    private Task OnSubmit() => Game.Submit(CheckEnTranslationCommand);

    private async Task PlaySample(MouseEventArgs e)
    {
        await JS.InvokeVoidAsync("playAudioSample", Game.AudioUrl);
    }
}

<script>
    window.playAudioSample = async (audioId) => {
        const audio = document.getElementById(audioId);
        await audio.play();
    };
</script>

@* todo: extract style *@
<style>
    .img-max-w-256 {
        max-width: 256px;
        width: 100%;
    }
</style>

<div class="text-left">
    <div class="row">
        <div class="col-7">
            <h3>Translate to English</h3>
        </div>
        <div class="col-5">
            @if (Game.IsFinished)
            {
                <Button Color="ButtonColor.Primary" Type="ButtonType.Reset" @onclick="@OnParametersSetAsync">
                    <i class="bi bi-arrow-repeat"></i>
                    Try again!
                </Button>
            }
        </div>
    </div>
    <div class="row">

        @if (Game.IsReady)
        {
            <div class="row">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title">
                            @Game.EeSentence
                            <button type="button" class="btn btn-primary btn-sm" @onclick="PlaySample">
                                <i class="bi bi-volume-down-fill"></i>
                            </button>
                            <audio id="@Game.AudioUrl" src="@Game.AudioUrl"></audio>
                        </h5>
                        <img id="sampleImage" class="img-fluid rounded img-max-w-256 p-1" src="@Game.ImageUrl" />

                        @if (Game.CheckResult.HasValue && Game.CheckResult.Value.IsSuccess)
                        {
                            var checkResult = Game.CheckResult.Value.Value;

                            <ul class="list-group">
                                @if (checkResult.IsMaxMatch)
                                {
                                    <li class="list-group-item list-group-item-success">
                                        @checkResult.EnUserSentence
                                    </li>
                                }
                                else
                                {
                                    <li class="list-group-item list-group-item-warning">
                                        @checkResult.EnUserSentence
                                        (@checkResult.Match / 5)
                                    </li>
                                    <li class="list-group-item list-group-item-success">
                                        @checkResult.EnExpectedSentence
                                    </li>
                                    <li class="list-group-item list-group-item-info">
                                        @checkResult.EnComment
                                    </li>
                                }
                            </ul>
                        }
                        @if (Game.CheckResult.HasValue && Game.CheckResult.Value.IsFailure)
                        {
                            <p class="text-danger">
                                @Game.CheckResult.Value.Error
                            </p>
                        }
                        @if (Game.IsCheckInProgress)
                        {
                            <div class="text-center">
                                <Spinner />
                            </div>
                        }
                        else if (Game.CheckResult.HasNoValue)
                        {
                            <div class="input-group input-group-sm">
                                <span class="input-group-text btn-success">Your translation:</span>
                                <InputText @bind-Value="@Game.UserTranslation" class="form-control" autocomplete="off" />
                                <button @onclick="@OnSubmit" class="btn btn-outline-primary" type="button">Submit</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
        else if (GameGenerationError.HasNoValue)
        {
            <div class="d-flex justify-content-center">
                <Spinner />
            </div>
        }

        @if (GameGenerationError.HasValue)
        {
            <p class="text-danger">
                @GameGenerationError
            </p>
        }
    </div>
</div>