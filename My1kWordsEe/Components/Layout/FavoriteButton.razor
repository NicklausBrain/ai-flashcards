@using BlazorBootstrap
@using CSharpFunctionalExtensions
@using My1kWordsEe.Models
@using My1kWordsEe.Services.Scoped

@inject FavoritesStateContainer FavoritesStateContainer;

@code {
    [Inject] protected PreloadService PreloadService { get; set; } = default!;

    [Parameter]
    public required dynamic Sample { get; init; }

    protected Maybe<Result<Favorites>> Favorites;

    protected override async Task OnParametersSetAsync()
    {
        Favorites = await FavoritesStateContainer.GetAsync();
        await base.OnParametersSetAsync();
    }

    protected bool IsFavorite =>
    Favorites.HasValue &&
    Favorites.Value.IsSuccess &&
    Favorites.Value.Value.IsFavorite(Sample);

    protected bool IsFeatureAvailable => Favorites.HasValue && Favorites.Value.IsSuccess;

    protected async Task AddToFavorites(dynamic favorite)
    {
        PreloadService.Show(SpinnerColor.Light, "Saving data...");
        Favorites = await FavoritesStateContainer.AddAsync(favorite);
        await Task.Delay(300);
        PreloadService.Hide();
        await OnParametersSetAsync();
        StateHasChanged();
    }

    protected async Task RemoveFromFavorites(dynamic favorite)
    {
        PreloadService.Show(SpinnerColor.Light, "Saving data...");
        Favorites = await FavoritesStateContainer.RemoveAsync(favorite);
        await Task.Delay(300);
        PreloadService.Hide();
        await OnParametersSetAsync();
        StateHasChanged();
    }
}


@if (IsFavorite)
{
    <i role="button" class="bi bi-star-fill favorite-active" @onclick="() => RemoveFromFavorites(Sample)"></i>
}
else if (IsFeatureAvailable)
{
    <i role="button" class="bi bi-star" @onclick="() => AddToFavorites(Sample)"></i>
}
@* else redirect to login button *@
