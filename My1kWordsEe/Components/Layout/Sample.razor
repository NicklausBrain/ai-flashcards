@using My1kWordsEe.Services;
@using My1kWordsEe.Models;
@using CSharpFunctionalExtensions;

@inject OpenAiService OpenAiService;
@inject TartuNlpService TartuNlpService;
@inject IJSRuntime JS

@code {
    [Parameter]
    public string EeWord { get; set; }

    private Result<Sentence>? sentence;

    private bool isImageLoading = false;
    private Result<Uri>? imageUrl;

    protected override async Task OnInitializedAsync()
    {
        sentence = await OpenAiService.GetSampleSentence(EeWord);
    }

    private async Task PlaySample(MouseEventArgs e)
    {
        var hasAudio = await JS.InvokeAsync<bool>("hasAudio");

        if (!hasAudio && sentence.HasValue && sentence.Value.IsSuccess)
        {
            var eeText = sentence.Value.Value.Ee;
            var imageStream = await TartuNlpService.GetSpeech(eeText);
            var dotnetImageStream = new DotNetStreamReference(imageStream);
            await JS.InvokeVoidAsync("setAudioSample", "sampleAudio", dotnetImageStream);
        }

        await JS.InvokeVoidAsync("playAudioSample");
    }

    private async Task ImageSample(MouseEventArgs e)
    {
        isImageLoading = true;
        if (!imageUrl.HasValue && sentence.HasValue && sentence.Value.IsSuccess)
        {
            var enText = sentence.Value.Value.En;
            imageUrl = await OpenAiService.GetSampleImageUri(enText);
        }
        isImageLoading = false;
    }
}

<script>
    window.setAudioSample = async (audioElementId, audioStream) => {
        const arrayBuffer = await audioStream.arrayBuffer();
        const blob = new Blob([arrayBuffer]);
        const url = URL.createObjectURL(blob);
        const audio = document.getElementById(audioElementId);
        audio.onload = () => {
            URL.revokeObjectURL(url);
        }
        audio.src = url;
    };
    window.playAudioSample = async () => {
        const audio = document.getElementById('sampleAudio');
        await audio.play();
    };
    window.hasAudio = () => {
        const audio = document.getElementById('sampleAudio');
        return audio.src ? true : false;
    };
    // window.hasImage = () => {
    //     const image = document.getElementById('sampleImage');
    //     return image.src ? true : false;
    // };
</script>

<div>
    <div class="row">
        @if (sentence == null)
        {
            <div class="d-flex justify-content-center">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        }
        else if (sentence.Value.IsSuccess)
        {
            <ul class="list-group">
                <li class="list-group-item">
                    <button type="button" class="btn btn-primary" @onclick="PlaySample">
                        <i class="bi bi-volume-down-fill"></i>
                    </button>
                    <button type="button" class="btn btn-primary" @onclick="ImageSample">
                        <i class="bi bi-card-image"></i>
                    </button>
                    <audio id="sampleAudio"></audio>
                </li>
                <li class="list-group-item">
                    @sentence.Value.Value.Ee
                </li>
                <li class="list-group-item">
                    @sentence.Value.Value.En
                </li>
                <li class="list-group-item">
                    @if (imageUrl.HasValue)
                    {
                        if (imageUrl.Value.IsSuccess)
                        {
                            <img src="@imageUrl.Value.Value" width="256" height="256" />
                        }
                        else
                        {
                            @imageUrl.Value.Error
                        }
                    }

                    @if (isImageLoading){
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    }
                </li>
            </ul>
        }
        else
        {
            <p><em>@sentence.Value.Error</em></p>
        }
    </div>
</div>
