@using BlazorBootstrap
@using CSharpFunctionalExtensions
@using My1kWordsEe.Models
@using My1kWordsEe.Models.Semantics
@using My1kWordsEe.Services.Cqs
@using My1kWordsEe.Services.Scoped

@inject FavoritesStateContainer FavoritesStateContainer;

@code {
    [Inject] protected PreloadService PreloadService { get; set; } = default!;

    [Parameter]
    public required EtWord Word { get; init; }

    protected Maybe<Result<Favorites>> Favorites;

    protected override async Task OnParametersSetAsync()
    {
        Favorites = await FavoritesStateContainer.GetAsync();
        await base.OnParametersSetAsync();
    }

    protected bool IsKnown =>
        Favorites.HasValue &&
        Favorites.Value.IsSuccess &&
        Favorites.Value.Value.IsKnown(Word);

    private string UserId => Favorites.Value.Value.UserId;

    protected bool IsFeatureAvailable => Favorites.HasValue && Favorites.Value.IsSuccess;

    protected async Task MarkAsKnownWord(EtWord word)
    {
        PreloadService.Show(SpinnerColor.Light, "Saving data...");
        Favorites = await FavoritesStateContainer.UpdateScore(word.Value, UpdateScoreCommand.ScoreUpdate.Max);
        await Task.Delay(300);
        PreloadService.Hide();
        await OnParametersSetAsync();
        StateHasChanged();
    }

    protected async Task RemoveFromKnownWords(EtWord word)
    {
        PreloadService.Show(SpinnerColor.Light, "Saving data...");
        Favorites = await FavoritesStateContainer.UpdateScore(word.Value, UpdateScoreCommand.ScoreUpdate.Down);
        await Task.Delay(300);
        PreloadService.Hide();
        await OnParametersSetAsync();
        StateHasChanged();
    }
}


@if (IsKnown)
{
    <i role="button" class="bi bi-clipboard-check-fill known-active" @onclick="() => RemoveFromKnownWords(Word)" title="Marked as known"></i>
}
else if (IsFeatureAvailable)
{
    <i role="button" class="bi bi-clipboard-minus" @onclick="() => MarkAsKnownWord(Word)" title="Mark as known"></i>
}
else
{
    <a role="button" class="bi bi-clipboard-minus" href="Account/Login" title="Login to use it"></a>
}
