@* @rendermode @(new InteractiveServerRenderMode(prerender: false))

@using BlazorBootstrap
@using My1kWordsEe.Models
@using My1kWordsEe.Models.Games
@using My1kWordsEe.Services.Cqs

@inject GetOrAddSampleWordCommand EnsureWordCommand;
@inject AddSampleSentenceCommand CreateSampleCommand;
@inject CheckEnTranslationCommand CheckEnTranslationCommand;
 *@

@code {

    class Slide
    {
        public string Title { get; set; }
    }
    class GameCompositeModel
    {
        public Slide[] Slides { get; set; } = new Slide[] { };

        public int CurrentSlideIndex { get; set; }

        public Slide CurrentSlide { get; set; }
    }
    GameCompositeModel Game = new();

    private void OnNext() { }// Game.NextSlide();

    private void OnPrevious() { } //Game.PrevSlide();

    private void OnSelectSlide(ushort index) { } // Game.GoToSlide(index);

    private Task OnSubmit()
    {

        return Task.CompletedTask;
    } //=> { }; Game.CurrentSlide.Submit(CheckEnTranslationCommand);
}


<script>
    const myCarouselElement = document.querySelector('#carouselExampleDark')

    const carousel = new bootstrap.Carousel(myCarouselElement, {
        interval: 2000,
        touch: false
    })
</script>

<style>
    .img-max-w-256 {
        max-width: 256px;
        width: 100%;
    }
</style>

<h3>GameComposite</h3>

<div class="text-left">
    <div class="row">
        <div class="col-4">
            <h3>Translate to English</h3>
        </div>
        <div class="col-8">
            @* @if (Game.IsFinished)
            {
            var result = Game.CalcResuls();
            <div class="progress m-2" role="progressbar" aria-valuemin="0" aria-valuemax="100">
            <div class="progress-bar" style="width: @result%">@result%</div>
            </div>
            } *@
        </div>
    </div>
    <div class="row">

        @if (Game.Slides.Any())
        {
            <div class="row">
                <nav aria-label="Page navigation example">
                    <ul class="pagination justify-content-center">
                        <li class="page-item" role="button" @onclick="@OnPrevious">
                            <a class="page-link">Previous</a>
                        </li>
                        @for (ushort i = 0; i < Game.Slides.Length; i++)
                        {
                            var ii = i;
                            <li @onclick="@(()=> OnSelectSlide(ii))" class="page-item @(Game.CurrentSlideIndex == i ? "active" : "") " role="button">
                                <a class="page-link">@(i + 1)</a>
                            </li>
                        }
                        <li class="page-item" role="button" @onclick="@OnNext">
                            <a class="page-link">Next</a>
                        </li>
                    </ul>
                </nav>
            </div>

            <div class="row">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title">@Game.CurrentSlide.Title</h5>
                        <div>
                            Game content
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="d-flex justify-content-center">
                <Spinner />
            </div>
        }
    </div>
</div>